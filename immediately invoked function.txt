In JavaScript, variables are scoped to their containing function. This means that they canâ€™t be accessed outside of the function. So this method provides privacy.

/////////////////////////

(function() {
    alert("hello");
})();

/////////////////////////

or

(function(global, $) {
	// ...
}(window, jQuery));


(function initOasis() {
    console.log("hi, i am oasis");
}());

or

(function() {
    console.log("hi, i am oasis");
}());

or

(function theName(msg, times) {
    for (var i = 1; i <= times; i++) {
        console.log(msg);
    }
}("Hello!", 5));

or

(function(global) {
	// ...
}(window));

or

(function($, global, document) {
    // use $ for jQuery, global for window
}(jQuery, window, document));

or

This is a function that died immediately after it came to life.
!function() {
    alert("Hello");
}();
// Shows the alert "Hello"

or

//same example // void is basically forcing the function to be treated as an expression.
void function() {
    alert("Hello");
}();

or

(function() {
    alert("hello");
}());




