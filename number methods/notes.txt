toFixed()
=========
toFixed() returns a string, with the number written with a specified number of decimals:

var x = 9.656;
x.toFixed(0);           // returns 10
x.toFixed(2);           // returns 9.66
x.toFixed(4);           // returns 9.6560
x.toFixed(6);           // returns 9.656000



The toPrecision()
=================
toPrecision() returns a string, with a number written with a specified length:

var x = 9.656;
x.toPrecision();        // returns 9.656
x.toPrecision(2);       // returns 9.7
x.toPrecision(4);       // returns 9.656




toString()
===========
toString() returns a number as a string.

var x = 123;
x.toString(); 



toExponential()
==============
toExponential() returns a string, with a number rounded and written using exponential notation.

var x = 9.656;
x.toExponential(2);     // returns 9.66e+0


valueOf()
========
valueOf() returns a number as a number.

var x = 123;
x.valueOf();            // returns 123 from variable x


Converting Variables to Numbers
================================
There are 3 JavaScript methods that can be used to convert variables to numbers:

The Number() method
The parseInt() method
The parseFloat() method


The Number() Method Used on Dates
Number() can also convert a date to a number
Number(new Date("2017-09-30"));    // returns 1506729600000



parseInt()
==========
parseInt() parses a string and returns a whole number. 
Spaces are allowed. Only the first number is returned:

parseInt("10");         // returns 10
parseInt("10.33");      // returns 10
parseInt("10 20 30");   // returns 10



parseFloat()
============
parseFloat() parses a string and returns a number. Spaces are allowed. Only the first number is returned:

parseFloat("10");        // returns 10
parseFloat("10.33");     // returns 10.33
parseFloat("10 20 30");  // returns 10



Number properties
=================
MAX_VALUE	Returns the largest number possible in JavaScript
MIN_VALUE	Returns the smallest number possible in JavaScript
NEGATIVE_INFINITY	Represents negative infinity (returned on overflow)
NaN	Represents a "Not-a-Number" value
POSITIVE_INFINITY	Represents infinity (returned on overflow)








https://www.w3schools.com/js/js_number_methods.asp